# Generated by Django 3.2.6 on 2021-08-11 22:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Display',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('lens', models.CharField(choices=[('GR', 'Graph'), ('TR', 'Tree'), ('TX', 'Text'), ('LI', 'Link'), ('CH', 'Chronology'), ('AG', 'Aggregation')], default='GR', max_length=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DisplayCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('sources_needed', models.BooleanField(default=False)),
                ('display_name', models.CharField(blank=True, max_length=200)),
                ('input_format', models.CharField(choices=[('TEXT', 'TEXT'), ('INT', 'INT'), ('FLOAT', 'FLOAT'), ('DATE', 'DATE')], default='TEXT', max_length=5)),
                ('order', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TieQuestionOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Orgs.question')),
            ],
        ),
        migrations.CreateModel(
            name='TipQuestionOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Orgs.question')),
            ],
        ),
        migrations.CreateModel(
            name='TipStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('default_display_collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Orgs.displaycollection')),
                ('questions', models.ManyToManyField(through='Orgs.TipQuestionOrder', to='Orgs.Question')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='tipquestionorder',
            name='tip_structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Orgs.tipstructure'),
        ),
        migrations.CreateModel(
            name='Tip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(null=True)),
                ('start_year_unknown', models.BooleanField(default=False, null=True)),
                ('start_month_unknown', models.BooleanField(default=False, null=True)),
                ('start_day_unknown', models.BooleanField(default=False, null=True)),
                ('end_date', models.DateField(null=True)),
                ('current', models.BooleanField(default=False, null=True)),
                ('end_year_unknown', models.BooleanField(default=False, null=True)),
                ('end_month_unknown', models.BooleanField(default=False, null=True)),
                ('end_day_unknown', models.BooleanField(default=False, null=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Orgs.tipstructure')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TieStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('left_tip_structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='right_tie_structures', to='Orgs.tipstructure')),
                ('questions', models.ManyToManyField(through='Orgs.TieQuestionOrder', to='Orgs.Question')),
                ('right_tip_structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='left_tie_structures', to='Orgs.tipstructure')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='tiequestionorder',
            name='tie_structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Orgs.tiestructure'),
        ),
        migrations.CreateModel(
            name='Tie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(null=True)),
                ('start_year_unknown', models.BooleanField(default=False, null=True)),
                ('start_month_unknown', models.BooleanField(default=False, null=True)),
                ('start_day_unknown', models.BooleanField(default=False, null=True)),
                ('end_date', models.DateField(null=True)),
                ('current', models.BooleanField(default=False, null=True)),
                ('end_year_unknown', models.BooleanField(default=False, null=True)),
                ('end_month_unknown', models.BooleanField(default=False, null=True)),
                ('end_day_unknown', models.BooleanField(default=False, null=True)),
                ('left_tip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='right_ties', to='Orgs.tip')),
                ('right_tip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='left_ties', to='Orgs.tip')),
                ('structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Orgs.tiestructure')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Fact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_text', models.TextField(blank=True, null=True)),
                ('response_int', models.IntegerField(blank=True, null=True)),
                ('response_float', models.FloatField(blank=True, null=True)),
                ('response_date', models.DateField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facts', to='Orgs.question')),
                ('sources', models.ManyToManyField(blank=True, to='Orgs.Tip')),
                ('tie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facts', to='Orgs.tie')),
                ('tip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facts', to='Orgs.tip')),
            ],
        ),
        migrations.CreateModel(
            name='DisplayOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('display', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Orgs.display')),
                ('display_collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Orgs.displaycollection')),
            ],
            options={
                'unique_together': {('display', 'display_collection')},
            },
        ),
        migrations.AddField(
            model_name='displaycollection',
            name='displays',
            field=models.ManyToManyField(through='Orgs.DisplayOrder', to='Orgs.Display'),
        ),
        migrations.AddField(
            model_name='displaycollection',
            name='tip_structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='display_collections', to='Orgs.tipstructure'),
        ),
        migrations.AddField(
            model_name='display',
            name='left_tie_structures',
            field=models.ManyToManyField(related_name='displays_right', to='Orgs.TieStructure'),
        ),
        migrations.AddField(
            model_name='display',
            name='right_tie_structures',
            field=models.ManyToManyField(related_name='displays_left', to='Orgs.TieStructure'),
        ),
        migrations.AddField(
            model_name='display',
            name='second_level_display',
            field=models.ManyToManyField(to='Orgs.Display'),
        ),
        migrations.AddField(
            model_name='display',
            name='tip_structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Orgs.tipstructure'),
        ),
        migrations.AlterUniqueTogether(
            name='tipquestionorder',
            unique_together={('tip_structure', 'question')},
        ),
        migrations.AlterUniqueTogether(
            name='tiequestionorder',
            unique_together={('tie_structure', 'question')},
        ),
    ]
